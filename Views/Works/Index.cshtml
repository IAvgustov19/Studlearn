@model SW.Frontend.Models.WorkDetailsViewModel
@using SW.Shared.Constants.Storage
@using Microsoft.AspNet.Identity
@using Microsoft.Owin.Security
@using SW.Frontend.Utilities;

@{
    var model = Model.DocumentPublic;
    ViewBag.Title = Seo.GetWorkTitle(model.Title, model.Type, model.Category.Title);
    ViewBag.Description = Seo.SanitizeMetadaDescription(model.BriefDescription);
    ViewBag.Image = model.HasImages ? model.Images[0] : SW.Shared.Constants.Application.Logo;
    ViewBag.Author = model.AuthorUserName.ToString();
    Layout = "~/Views/Shared/_TwoColumnsTwoRowsLayout.cshtml";
}

@section Styles {
    <style>
     .social-icons li > button {
         background-position: 0 0;
         background-repeat: no-repeat;
         display: block;
         height: 28px;
         transition: all 0.3s ease-in-out 0s;
         width: 28px;
         color: #5b9bd1;
         text-shadow: none;
         border: none;
         padding: 0 !important;
         cursor: pointer;
     }

     .social-icons li:hover > button {
         background-position: 0 -38px;
     }

     .popover {
         max-width: 100%;
     }

     @*Чтобы заголовки выглядели как на странице редактирования работы*@
     h1, h2, h3, h4, h5, h6 {
     font-weight:inherit;
     }
    </style>
    <link href="~/metronic/assets/frontend/pages/css/products/media.css" rel="stylesheet" type="text/css" />
    <link href="~/metronic/assets/frontend/pages/css/products/product.css" rel="stylesheet" type="text/css" />
    <link href="~/metronic/assets/global/plugins/bootstrap-toastr/toastr.min.css" rel="stylesheet" type="text/css" />
    <link href="//cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.css" rel="stylesheet" type="text/css" />
}

<div class="main main-style">
    <div class="product-main-container">
        <div class="custom-container">

            @section Title {
            <div class="more-products-list-container">
                <div class="product-breadcrumb">
                    <a href="@Model.DocumentPublic.Category.Url" class="comeback-to-page" style="border-radius: 8px !important;">Вернуться назад</a>
                    <div class="nav-breadcrumb">
                        <ul class="nav-breadcrumb-list">
                            <li class="nav-breadcrumb-item" onclick="window.location.href='@Url.Action("Index", "Home")'">Главная страница /</li>
                            <li class="nav-breadcrumb-item" onclick="window.location.href='@Url.Action("Index", "Catalog")'">Каталог /</li>
                            <li class="nav-breadcrumb-item" onclick="window.location.href='@Model.DocumentPublic.Category.Url'">@Model.DocumentPublic.Type /</li>
                            <li class="nav-breadcrumb-item" style="color: #272F37 !important;">@Model.DocumentPublic.Title</li>
                        </ul>
                    </div>
                </div>
                <div style="width: 1px;"></div>
            </div>
                }

            @section Product {
            <div class="product-demonstration-container">
                <div class="product-slider">
                    <div class="blog-item-img">
                        <div class="front-carousel">
                            <div id="myCarousel" class="carousel slide">
                                <div class="carousel-inner" style="border-radius: 12px !important;">
                                    @if (model.HasVideo)
                                    {
                                        <div class="item active">
                                            <iframe src="//www.youtube.com/embed/@Model.DocumentPublic.YoutubeId?rel=0&showinfo=0"
                                                    width="100%" frameborder="0" allowfullscreen style="height: 100%;"></iframe>
                                        </div>
                                    }
                                    @if (model.HasImages)
                                    {
                                        for (Int32 i = 0; i < model.Images.Count; i++)
                                        {
                                            <div class="item @(i == 0 && !model.HasVideo ? "active" : "")">
                                                <a href="@Model.DocumentPublic.Images[i]" class="fancybox-button" title="Нажми, чтобы увеличить" data-rel="fancybox-button">
                                                    <img src="@Model.DocumentPublic.Images[i]" alt="@Model.DocumentPublic.Title" style="width: 100%; height: 100%;">
                                                </a>
                                            </div>
                                        }
                                    }
                                </div>
                                @if (model.ShowSliderButtons)
                                {
                                    <a class="slider-prev" href="#myCarousel" data-slide="prev">
                                    </a>
                                    <a class="slider-next" href="#myCarousel" data-slide="next">
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                    
                       
                                        <div class="thumbnail-slider">
                                                                <div class="slide-btn">
                                                                    <button class="slide-btn-left" style="border-radius: 30px !important;"></button>
                                                                </div>
                                            <div class="thumbnail-slider-container">
                                                @if (model.HasImages)
                                                {
                                                    foreach (var image in model.Images)
                                                    {

                                                        <img src="@image" alt="@Model.DocumentPublic.Title " style="border-radius: 12px !important;">
                                                    }
                                                }
                                            </div>
                                            <div class="slide-btn">
                                                <button class="slide-btn-right" style="border-radius: 30px !important;"></button>
                                            </div>
                                        </div>
                        
                    

                </div>
                <div class="product-demonstration-block">
                    <div class="product-block1">
                        <h1 class="product-title">@Model.DocumentPublic.Title</h1>
                        <div class="product-benefits">
                            <div class="benefit-list">
                                @if (!ViewBag.HasSales)
                                {
                                    <span class="benefit-item first-sale">Покупается впервые</span>
                                }
                                <span class="benefit-item rate">@Model.DocumentPublic.Rating</span>
                                <a class="benefit-item"
                                   href="@(Model.DocumentPublic.Category.Url + "?type=" + Model.DocumentPublic.TypeId)"
                                   title="Посмотреть все @Model.DocumentPublic.Type в категории @Model.DocumentPublic.Category.Title">
                                    @Model.DocumentPublic.Type
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="product-block2" style="border-radius: 12px !important;">
                        <p class="product-text">
                            Сразу после завершения оплаты вы получите доступ к скачиванию работы,
                            и мы также отправим файл с работой на вашу электронную почту. Исходные файлы программы будут
                            доступны для ваших редактирований по вашему усмотрению.
                        </p>
                        <div class="mobile-container">
                            <div class="product-price-container">
                                <div class="product-price">
                                    @{
                                        string price = string.Empty;
                                        if (Model.DocumentPublic.IsFree)
                                        {
                                            price = "Бесплатно";
                                        }
                                        else
                                        {
                                            price = Convert.ToInt32(Model.DocumentPublic.Price.Value).ToString();
                                            price += " ₽";
                                        }
                                    }

                                    <span class="discount-price">
                                        @price
                                    </span>
                                </div>
                                <span class="guarantee">Гарантия качества</span>
                            </div>
                            <div class="product-buy-buttons">
                                @{
                                    var buyLink = (IHtmlString)null;
                                    string btn_txt = string.Empty;

                                    if (Model.DocumentPublic.IsFree || Model.DocumentPublic.IsPurchased)
                                    {
                                        buyLink = Html.Raw(Url.Action("FilesList", "Works", new { documentId = @ViewBag.WorkId }));
                                        btn_txt = "Скачать работу";
                                    }
                                    else
                                    {
                                        buyLink = Html.Raw(Url.Action("Payment", "Works", new { id = @ViewBag.WorkId }));
                                        btn_txt = "Купить работу";
                                    }

                                    <a href="@buyLink" class="btn btn-buy" style="border-radius: 12px !important;">@btn_txt</a>
                                }
                                <a href="https://t.me/studlearn_support" class="btn btn-buy-telegram" style="border-radius: 12px !important;"></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                }

            @section Work {
            <div class="work-description-container">
                <div class="product-description">
                    <h2 class="title-description">Описание работы:</h2>
                    @Html.Raw(Model.DocumentPublic.Content)
                </div>

                <div class="author-work" style="border-radius: 12px !important;">
                    <div class="author-name">
                        <p class="author-section-text">
                            Автор работы
                        </p>
                        <div class="author-profile">
                            @{
                                if (Model.AuthorImageUrl == null)
                                {
                                    <img src="/images/default/noavatar.jpg?w=150&h=150" alt="author-profile-img">
                                }
                                else
                                {
                                    <img src="@Model.AuthorImageUrl" alt="author-profile-img">
                                }
                            }
                            <div class="author-info">
                                <p class="author-section-text">
                                    @Model.DocumentPublic.AuthorUserName
                                </p>
                                <span class="author-benefits stars">@Model.AuthorRating</span>
                                <span class="author-benefits works">@Model.WorksCount</span>
                                <p class="author-text">
                                    @Model.AuthorDescription
                                </p>
                            </div>
                        </div>
                        <hr class="author-stroke" />
                    </div>
                    <div class="author-work-list">
                        <p class="author-section-text">
                            Список файлов
                        </p>
                        <div class="work-files">
                            <ul class="work-file-text">
                                @foreach (var file in Model.DocumentPublic.Files)
                                {
                                    <li class="file-list-item txt">@file.Title</li>
                                }
                            </ul>
                        </div>
                        <hr class="author-stroke" />
                    </div>
                    <div class="rate-work">
                        <div class="rate-work-title">
                            <p class="author-section-text">
                                Оценить работу
                            </p>
                            <span class="author-benefits stars">5.0</span>
                        </div>
                        <div class="rate-stars">
                            <div class="rate-stars-container">
                                <span class="rate-star"></span>
                                <span class="rate-star"></span>
                                <span class="rate-star"></span>
                                <span class="rate-star"></span>
                                <span class="rate-star"></span>
                            </div>
                            <p class="rate-text">Спасибо за оценку!</p>
                        </div>
                        <hr class="author-stroke" />
                    </div>
                    <div class="buy-work-buttons">
                        <div class="buy-buttons-container">
                            @{ 
                                var buyLink = (IHtmlString)null;
                                string btn_txt = string.Empty;

                                if (Model.DocumentPublic.IsFree || Model.DocumentPublic.IsPurchased)
                                {
                                    buyLink = Html.Raw(Url.Action("FilesList", "Works", new { documentId = @ViewBag.WorkId }));
                                    btn_txt = "Скачать работу";
                                }
                                else
                                {
                                    buyLink = Html.Raw(Url.Action("Payment", "Works", new { id = @ViewBag.WorkId }));
                                    btn_txt = "Купить работу";
                                }
                            }
                            <a class="btn buy-button" style="border-radius: 12px !important;" href="@buyLink">
                                @{
                                    string price = string.Empty;
                                    if (Model.DocumentPublic.IsFree)
                                    {
                                        price = "Бесплатно";
                                    }
                                    else
                                    {
                                        price = Convert.ToInt32(Model.DocumentPublic.Price.Value).ToString();
                                        price += " ₽";
                                    }

                                    string btn_txt_ = btn_txt;
                                    if (!Model.DocumentPublic.IsFree || !Model.DocumentPublic.IsPayed)
                                    {
                                        btn_txt_.Replace("работу", price);
                                    }
                                }
                                @btn_txt_
                            </a>
                            <a class="btn buy-button-telegram" style="border-radius: 12px !important;" href="https://t.me/studlearn_support">
                                Заказать через Telegram
                            </a>
                        </div>
                        <hr class="author-stroke" />

                    </div>
                    <div class="author-work-footer">
                        <span class="report-text">Пожаловаться</span>
                    </div>
                </div>
            </div>
                }

            @section Comments {
                        <div class="comments-container">
                            <div class="users-comments" id="">
                                <h3 class="title-description">
                                    Комментарии
                                    <span class="title-description number">@Model.DocumentPublic.CommentsNumber</span>
                                </h3>
                                <div class="portlet-body" id="SwCommentsWrapper" data-bind="with: vmComments" style="@(Request.Browser.IsMobileDevice ? "display:none" : "display:block")">

                                    <div class="comments">
                                        <div class="note note-info" style="margin-bottom:0; display:none;" data-bind="visible: comments().length == 0">
                                            <p>
                                                @SW.Resources.Frontend.General.NoAnyComment
                                            </p>
                                        </div>
                                        <div class="well text-center" data-bind="visible: showMoreAvailable">
                                            <a href="javascript:void(0);" data-bind="click: showMore">
                                                Показать более ранние комментарии
                                            </a>
                                        </div>
                                        <div data-bind="foreach: comments">
                                            <div class="comment-item" data-bind="css: rating<= -5 ? 'bad' : ''" temprop="review" itemscope="" itemtype="http://schema.org/Review">
                                                @*<a data-bind="attr: {href: author.profileUrl }" class="pull-left">
                                <img alt="author-profile" class="media-object" data-bind="attr: { src : author.avatarThumbnail }">
                            </a>*@

                                                <div class="comment-author">
                                                    <img data-bind="attr: { src : author.avatarThumbnail }" alt="author-profile" style="border-radius: 8px !important;">
                                                    <div class="comment-name">
                                                        <p class="author-section-text" data-bind="text: author.username, attr: {href: author.profileUrl }">
                                                            @Model.DocumentPublic.AuthorUserName
                                                        </p>
                                                        <span class="user-role" data-bind="visible: userTypeDisplay, text: userType, css: 'badge-' + userTypeColor, attr: {title: userTypeDescription}"></span>
                                                    </div>
                                                </div>

                                                <p class="work-text" data-bind="text: message">
                                                </p>

                                                <div class="comment-panel">
                                                    <div class="created-at">
                                                        <span class="clock-icon icons"></span>
                                                        <span class="created-at-date" data-format="DD-MM-YY" data-bind="text: postedAt"></span>
                                                        <span class="created-at-time" data-bind="text: postedAt"></span>
                                                    </div>
                                                    <div class="comment-likes">
                                                        <span class="minus-icon icons" title="отстойчик" data-bind="css: isUserVoted && !isPositive ? 'font-red' : '', click: $parent.negative.bind($data, '@User.Identity.GetUserId()')"></span>
                                                        <span class="likes-count" data-bind="text: likes"></span>
                                                        <span class="plus-icon icons" data-bind="css: isUserVoted && isPositive ? 'font-green' : '', click: $parent.positive.bind($data, '@User.Identity.GetUserId()')"></span>
                                                    </div>
                                                </div>

                                                <div class="media-body">
                                                    @*<meta itemprop="itemReviewed" content="@Model.Title" />
                                <div itemprop="reviewRating" itemscope="" itemtype="http://schema.org/Rating">
                                    <meta content="0" itemprop="worstRating">
                                    <meta content="@Model.Rating" itemprop="ratingValue">
                                    <meta content="5" itemprop="bestRating">
                                </div>*@
                                                    @*<div class="comment-name" style="display: inline-block;">
                                    <p class="author-section-text" data-bind="text: author.username, attr: {href: author.profileUrl }">@Model.DocumentPublic.AuthorUserName</p>
                                </div>
                                <span class="user-role" data-bind="visible: userTypeDisplay, text: userType, css: 'badge-' + userTypeColor, attr: {title: userTypeDescription}"></span>*@
                                                    <div style="float:right">
                                                        @*<div class="dislike" style="font-size: 18px !important;" title="отстойчик" data-bind="css: isUserVoted && !isPositive ? 'font-red' : '', click: $parent.negative.bind($data, '@User.Identity.GetUserId()')">
                                        <i class="fa fa-thumbs-down"></i>
                                    </div>
                                    <div style="width: 30px; display: inline-block; text-align:center;" data-bind="text: rating"></div>
                                    <div class="comment-likes" style="font-size: 18px !important;" title="крутотень" data-bind="css: isUserVoted && isPositive ? 'font-green' : '', click: $parent.positive.bind($data, '@User.Identity.GetUserId()')">
                                        <i class="fa fa-thumbs-up"></i>
                                    </div>*@
                                                        @*<span class="created-at-date" data-format="LL" data-bind="text: postedAt"></span>*@
                                                        @if (!string.IsNullOrEmpty(@User.Identity.Name))
                                                        {
                                                            @: / <a class="reply" title="ответить" style="cursor:pointer;" data-bind="click: $parent.click"><i class="fa fa-reply"></i></a>
                                                        }
                                                        <!--  ko if: options.editEnabled -->
                                                        <a class="edit" title="редактировать" style="cursor:pointer;" data-bind="click: $parent.startEdit"><i class="fa fa-pencil"></i></a>
                                                        <!-- /ko -->
                                                        @if (((System.Security.Claims.ClaimsIdentity)User.Identity).HasClaim(SW.Core.DataLayer.Account.ResourcesType.Type, "Moderator"))
                                                        {
                                                            @:  <a class="edit" title="удалить" style="cursor:pointer;" data-bind="click: $parent.delete"><i class="fa fa-trash"></i></a>
                                                        }

                                                    </div>
                                                    <p>
                                                        <!-- ko ifnot: repliedTo == null -->
                                                        <a data-bind="text: repliedTo.username + ',', attr: {href: '/Authors/Profile/' + repliedTo.slug }"></a>
                                                        <!-- /ko -->
                                                        <!-- ko ifnot: onEdit -->
                                                        @*<span itemprop="work-text" data-bind="text: message"></span>*@
                                                        <!-- /ko -->
                                                        <div data-bind="visible: onEdit">
                                                            <div class="form-group" style="margin-bottom: 0;">
                                                                <textarea class="form-control edit-message" rows="4" data-bind="value: message,"></textarea>
                                                            </div>
                                                            <button class="btn btn-primary" data-bind="click: $parent.stopEdit">Сохранить</button>
                                                        </div>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="post-comment padding-top-20">
                    <div class="sections-title-h2">Оставить комментарий</div>

                </div>*@
                                </div>
                            </div>
                            <div class="empty-container"></div>
                        </div>
            
            <div class="comments-container">
                <div class="add-comment-form">
                    <h4 class="title-section">
                        Оставить комментарий
                    </h4>

                    @if (string.IsNullOrEmpty(@User.Identity.Name))
                    {
                        <div class="note note-warning">
                            <h4>Ты не можешь комментировать</h4>
                            Только зарегистрированые пользователи имеют возможность комментировать работы
                            <div>
                                @Html.Action("RegisterPartial", "Shared", true)
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="comment-inputs">
                            <label>
                                <input type="text" class="comment-input-name" placeholder="Ваше имя" style="border-radius: 12px !important;"
                                       value="@User.Identity.Name" name="Author.Name" readonly="readonly">
                            </label>
                            <div class="text-container">
                                <label style="width: 100%;">
                                    <textarea type="text" class="comment-input-text" placeholder="Комментарий"
                                              maxlength="300" style="border-radius: 12px !important;"
                                              name="Message" data-bind="value: message, executeOnEnter: $parent.post"></textarea>
                                    <span class="letter-length"><span>0</span>/300</span>
                                </label>
                            </div>
                        </div>
                        <button type="submit" class="send-comment-btn" data-bind="click: $parent.post" style="border-radius: 12px !important;">Опубликовать комментарий</button>

                    }

                </div>
                <div class="empty-container"></div>
            </div>
                }

            @section More {
            <div class="more-products">
                <div class="more-products-list-container">
                    <h4 class="title-more-products">Похожие работы</h4>
                    <div style="width: 1px;"></div>
                </div>
                <div class="more-products-list-container">
                    <div class="more-products-list">
                        @foreach (var work in Model.FeaturedWorks)
                        {
                            <div class="product-box">
                                <div class="product-box-image" style="border-radius: 12px !important; background-image: url('@work.ImageUrl');">
                                    <div class="product-box-items">
                                        <span class="product-box-image-item">
                                            Алгоритм
                                        </span>
                                        <span class="product-box-image-item">
                                            Коллекции
                                        </span>
                                        <span class="product-box-image-item">
                                            C#
                                        </span>
                                    </div>
                                    <span class="product-box-image-item rating">
                                        3.2
                                    </span>
                                </div>
                                <div class="product-box-info">
                                    <span class="views">12 K</span>
                                    <span class="product-box-price">@work.PriceLabel</span>
                                </div>
                                <div class="product-box-title">
                                    <p>@work.Title</p>
                                    <a href="@work.Url" class="watch-more">Смотреть работу</a>
                                </div>
                            </div>
                        }
                    </div>
                    <div style="width: 1px;"></div>
                </div>
            </div>
                }
        </div>
    </div>
</div>
<script src="/Metronic/assets/frontend/pages/scripts/product.js"></script>

@section JsCode {
    <script type="application/ld+json">
        {
        "@@context": "http://schema.org",
        "@@type": "BreadcrumbList",
        "itemListElement": [
        {
        "@@type": "ListItem",
        "position": 1,
        "item": {
        "@@id": "/sections",
        "name": "Каталог"
        }
        },
        {
        "@@type": "ListItem",
        "position": 2,
        "item": {
        "@@id": "@Model.DocumentPublic.Category.Url",
        "name": "@Model.DocumentPublic.Category.Title"
        }
        }
        ]
        }
    </script>
    <script src="@Url.Content("/scripts/modules/comments/commentsviewmodel.js")"></script>
    <script src="@Url.Content("/scripts/modules/works/workslikesviewmodel.js")"></script>
    <script src="/metronic/assets/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
    <script src="/scripts/moment-with-locales.min.js" type="text/javascript"></script>
    <script src="//cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>
    <script src="/scripts/addtocopy.js" type="text/javascript"></script>
    @*<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>*@
    <script type="text/javascript">
        $(document).ready(function () {
            //buy button replace on mobile devices
            /*if ($(window).width() > 414) $("#BuyDownloadButton").insertBefore(".bg-info");
            else $("#BuyDownloadButton").insertBefore("#content");
            $( window ).resize(function() {
                if ($(window).width() > 414) $("#BuyDownloadButton").insertBefore(".bg-info");
                else $("#BuyDownloadButton").insertBefore("#content");
            });
            */
            if ($(window).width() > 414) $("#rightSidebarTop").insertBefore("#rightSidebarBottom");
            else $("#rightSidebarTop").insertBefore("#content");
            $(window).resize(function() {
                if ($(window).width() > 414) $("#rightSidebarTop").insertBefore("#rightSidebarBottom");
                else $("#rightSidebarTop").insertBefore("#content");
            });





            $("#content").addtocopy({ htmlcopytxt: '<br>Детали на <a href="' + window.location.href + '">' + window.location.href + '</a>', minlen: 35, addcopyfirst: false });
            moment.locale('ru');
            Metronic.init();
            SwInit.initFileSizes();
            $.post( "/api/internal/works/@ViewBag.WorkId/visit");
            $('#showCommentsBtn').click(function()
            {
                $('#SwCommentsWrapper').show();
                $('#showCommentsBtn').hide();
            });
            $('.sw-download-or-by').click(function(){
                var isPayed = '@Model.DocumentPublic.IsPayed.ToString().ToLower()' === 'true';
                if(isPayed) {
                    window.location = '@Html.Raw(Url.Action("Payment", "Works", new { id = Model.DocumentPublic.DocumentId }))';
                }
                else {
                    if ('@Model.DocumentPublic.Files.Count' == 0)
                    {
                        SwCore.showWarning("", "Автор посчитал, что файлы для этой работы не нужны");
                        return;
                    }
                    var isSingleFile = '@Model.DocumentPublic.Files.Count' == 1;
                    if(isSingleFile) {
                        window.location= '@Html.Raw(Url.Action("File", "Works", new { fileId = @Model.DocumentPublic.Files.Count != 0 ? @Model.DocumentPublic.Files[0].UserFileId : 0, documentId = @ViewBag.WorkId }))';
                    }
                    else {
                        window.location= '@Html.Raw(Url.Action("FilesList", "Works", new { documentId = @ViewBag.WorkId }))';
                    }
                }
            });

            var originalLeave = $.fn.popover.Constructor.prototype.leave;
            $.fn.popover.Constructor.prototype.leave = function(obj){
                var self = obj instanceof this.constructor ?
                    obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)
                var container, timeout;
                originalLeave.call(this, obj);
                if(obj.currentTarget) {
                    container = $(obj.currentTarget).siblings('.popover')
                    timeout = self.timeout;
                    container.one('mouseenter', function(){
                        clearTimeout(timeout);
                        container.one('mouseleave', function(){
                            $.fn.popover.Constructor.prototype.leave.call(self, self);
                        });
                    })
                }
            };
        });

        var masterDocumentsViewModel = (function ($, ko) {
            var master = {
                shouter: new ko.subscribable(),
                title: ko.observable(""),
                subtitle: ko.observable(""),
                messages: {
                    createOrEdit: "onCreateOrEditClick",    // open edit form
                    list: "onListClick",                    // open sections list
                    save: "onSaveClick",                    // create/modify section
                    saveEnd: "onSaveFinished",              // create/modify finished successfuly and you should modify it in the list
                    refresh: "onRefreshClicked"             // refresh clicked
                }
            };
            master.vmComments = new CommentsViewModel(master, false, @ViewBag.WorkId, '@System.Configuration.ConfigurationManager.AppSettings["dashboardUrl"]/Account/Login?ReturnUrl=@Request.Url.AbsoluteUri');
            ko.applyBindings(master, document.getElementById("SwCommentsWrapper"));
            var liker = new WorksLikesViewModel(@Model.DocumentPublic.Rating, @Model.DocumentPublic.IsUserVoted.ToString().ToLower(), @Model.DocumentPublic.IsPositive.ToString().ToLower(), '@Model.DocumentPublic.AuthorId', '@User.Identity.GetUserId()', @ViewBag.WorkId, '@System.Configuration.ConfigurationManager.AppSettings["dashboardUrl"]/Account/Login?ReturnUrl=@Request.Url.AbsoluteUri');
            ko.applyBindings(liker, document.getElementById("workrating"));
            return master;
        })(jQuery, ko);

        @*google.charts.load('current', {packages: ['corechart', 'line']});
        google.charts.setOnLoadCallback(enabledPopover);

        function enabledPopover() {
            var data = new google.visualization.DataTable();
            data.addColumn('date', 'X');
            data.addColumn('number', '');

            var dataLoaded = false;

            var options = {
                legend: 'none',
                hAxis: {
                },
                vAxis: {
                    viewWindow: {
                        min: 0,
                        max: 100
                    }
                },
                series: {
                    1: {curveType: 'function'}
                }
            };

            $("#visits").popover(
                    {
                        trigger: 'click hover',
                        placement : 'right',
                        html : true,
                        content : '<div id="myPopover" class="popover.right" style="width:700px; height:150px;"><div class="lable-electricity"><div id="chart_div" style="width:700px; height:150px;"></div></div></div>',
                        delay: {show: 50, hide: 400},
                    });
            $('#visits').on('shown.bs.popover', function () {
                if (!dataLoaded)
                {
                    $.ajax({
                        url: "/api/internal/works/@Model.DocumentId/popularity",
                        async: false
                    }).done(function(response) {
                        var chartData = [];
                        for (var i = 0, len = response.length; i < len; i++) {
                            chartData.push([
                                new Date(response[i][0]),
                                response[i][1],
                            ]);
                        }
                        data.addRows(chartData);
                        dataLoaded = true;
                    });
                }
                drawCurveTypes(data, options)
            });
        }*@
        function drawCurveTypes(data, options) {
            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
    </script>
}
